% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RMSTSens.ci.R
\name{RMSTSens.ci}
\alias{RMSTSens.ci}
\title{Confidence interval for bias-adjusted restricted mean survival time}
\usage{
RMSTSens.ci(
  x,
  B = 1000,
  level = 0.95,
  seed = NULL,
  formula,
  model = "logistic",
  trunc.prop = 0,
  use.multicore = TRUE,
  n.core = parallel::detectCores()/2,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{x}{An object for class \code{RMSTSens}. If you want to input several \code{RMSTSens} objects, use the \code{merge_object} function. See \code{merge_object}.}

\item{B}{The number of bootstrap replicates, Default: 1000.}

\item{level}{The confidence level required (i.e., \eqn{1-\alpha}), Default: 0.95.}

\item{seed}{The seed number. If the propensity score was estimated using methods in the \code{randomForest} or \code{gbm} package, then enter the seed number used at that time.}

\item{formula}{The formula for estimating propensity score. See Examples.}

\item{model}{The method for estimating propensity score, Default: "logistic". "logistic", "rf", or "gbm" can be available. If model is not "logistic", \code{randomForest} or \code{gbm} package are available.}

\item{trunc.prop}{Optional truncation percentile (0-0.5), Default: 0. E.g. when trunc.prop=0.01, the left tail is truncated to the 1st percentile, and the right tail is truncated to the 99th percentile. When specified, truncated propensity scores are returned.}

\item{use.multicore}{Logical scalar indicating whether to parallelize our optimization problem, Default: TRUE.}

\item{n.core}{The number of cores to use, Default: parallel::detectCores()/2.}

\item{verbose}{According to the verbose level, whether or not print the completion message for each \code{B}/100\emph{th} bootstrap, Default: TRUE.}

\item{\dots}{Additional arguments passed on to \code{randomForest} or \code{gbm} function in \code{randomForest} or \code{gbm} package.}
}
\value{
The object is a data.frame with class \code{RMSTSens}. The function returns following components:
\item{N}{Total number of subjects}
\item{N.exposed}{The number of subjects in exposed group}
\item{N.unexposed}{The number of subjects in unexposed group}
\item{N.event.exposed}{The number of events in exposed group}
\item{N.event.unexposed}{The number of events in unexposed group}
\item{cen.rate}{Total censoring rate}
\item{cen.rate.exposed}{Censoring rate in exposed group}
\item{cen.rate.unexposed}{Censoring rate in unexposed group}
\item{Lambda}{A scalar or vector of sensitivity parameter \eqn{\Lambda} used}
\item{Tau}{User-specific time point \eqn{\tau}, If tau not specified (NULL), use the minimum between the largest observed event time in each groups}
\item{Method}{A optimization method used}
\item{min.exposed}{The minimum of adjusted RMST based on the shifted propensity score for exposed group}
\item{max.exposed}{The maximum of adjusted RMST based on the shifted propensity score for exposed group}
\item{min.unexposed}{The minimum of adjusted RMST based on the shifted propensity score for unexposed group}
\item{max.unexposed}{The maximum of adjusted RMST based on the shifted propensity score for unexposed group}
\item{RMST.diff.min}{Lower bound of point estimate for between-group difference in adjusted RMST based on shifted propensity score}
\item{RMST.diff.max}{Upper bound of point estimate for between-group difference in adjusted RMST based on shifted propensity score}
\item{RMST.diff.min.lower}{Lower bound of (\eqn{1-\alpha})\% confidence interval for between-group difference in adjusted RMST based on shifted propensity score}
\item{RMST.diff.max.upper}{Upper bound of (\eqn{1-\alpha})\% confidence interval for between-group difference in adjusted RMST based on shifted propensity score}
\item{min.exposed.lower}{Lower (\eqn{\alpha/2})-quantile of adjusted RMST based on the shifted propensity score for exposed group}
\item{max.exposed.upper}{Upper (\eqn{\alpha/2})-quantile of adjusted RMST based on the shifted propensity score for exposed group}
\item{min.unexposd.lower}{Lower (\eqn{\alpha/2})-quantile of adjusted RMST based on the shifted propensity score for unexposed group}
\item{max.unexposed.upper}{Upper (\eqn{\alpha/2})-quantile of adjusted RMST based on the shifted propensity score for unexposed group}
The results for the \code{\link{RMSTSens.ci}} are printed with the \code{\link{print.RMSTSens}} functions.
To generate result plot comparing sensitivity parameters \eqn{\Lambda} with confidence interval and range of adjusted RMST based on shifted propensity score, use the \code{\link{autoplot.RMSTSens}} function.
}
\description{
Function for constructing the confidence interval(s) for restricted mean survival time using propensity score.
}
\details{
To assess details of method for sensitivity analysis, see Lee et al. (2022).
When estimating the range of the adjusted RMST based on the shifted propensity score using \code{RMSTSens} function, there is no need for the formula and model used to estimate the propensity score.
However, when estimating the confidence interval, the formula and model are absolutely necessary.
Note that to use \code{RMSTSens.ci} function in our package, propensity score should be estimated by using 1) \code{glm} that has a binomial distribution with logit link function or 2) \code{randomForest} or \code{gbm} function in \code{randomForest} or \code{gbm} package.
Also, if propensity score was estimated using methods in the \code{randomForest} or \code{gbm} package, then you should enter the seed number used at that time in "seed" argument.
}
\examples{
\dontrun{
dat <- gbsg
dat$size2 <- ifelse(dat$size <= 20, 0,
                    ifelse(dat$size > 20 & dat$size <= 50, 1, 2))
dat$age2 <- dat$age/100
dat$er2 <- dat$er/1000

## Estimation of propensity score
denom.fit <- glm(hormon~(age2)^3+(age2)^3*log(age2)+meno+factor(size2)+sqrt(nodes)+er2,
                 data=dat, family=binomial(link="logit"))
dat$Ps <- predict(denom.fit, type="response")


## Between-group difference in adjusted RMST based on shifted propensity score
## Adjusted RMST with not specified tau and with multiple lambda
# Using approximate optimization method
results.approx2 <- RMSTSens(time="rfstime", status="status", exposure="hormon",
                            level.exposed="1", ps="Ps", data=dat, methods="Approx",
                            use.multicore=TRUE, n.core=2,
                            lambda=c(1,1.5), tau=365.25*5, ini.par=1, verbose=FALSE)
re.ap.boot <- RMSTSens.ci(x=results.approx2, B=40, level=0.95, seed=220524,
              formula=hormon~(age2)^3+(age2)^3*log(age2)+meno+factor(size2)+sqrt(nodes)+er2,
          model="logistic", trunc.prop=0, use.multicore=TRUE, n.core=2, verbose=TRUE)
re.ap.boot


## Estimate of propensity score using random forest
library(randomForest)
set.seed(220528)
model.rf <- randomForest(formula=factor(hormon)~age2+meno+size2+nodes+er2, data=dat)
dat$Ps.rf <- as.numeric(predict(model.rf, type= "prob")[,2])
sum(dat$Ps.rf== 0) + sum(dat$Ps.rf== 1) # There are some 0 or 1 values
# Trimming the propensity score
trunc.prop <- 0.01
dat$Ps.rf <- ifelse(dat$Ps.rf > quantile(dat$Ps.rf, 1-trunc.prop),
                    quantile(dat$Ps.rf, 1-trunc.prop),
                    ifelse(dat$Ps.rf < quantile(dat$Ps.rf, trunc.prop),
                           quantile(dat$Ps.rf, trunc.prop), dat$Ps.rf))
sum(dat$Ps.rf== 0) + sum(dat$Ps.rf== 1)
# Range of RMST
results.approx.rf <- RMSTSens(time="rfstime", status="status", exposure="hormon",
                              level.exposed="1", ps="Ps.rf", data=dat, methods="Approx",
                              use.multicore=TRUE, n.core=2,
                              lambda=c(1,1.5,2), tau=365.25*5, ini.par=1, verbose=FALSE)
# CI of RMST
re.rf <- RMSTSens.ci(x=results.approx.rf, B=40, level=0.95, seed=220528,
              formula=factor(hormon)~age2+meno+size2+nodes+er2,
                     model="rf", trunc.prop=trunc.prop, use.multicore=TRUE, n.core=2, verbose=TRUE,
              trContol=ctrl)
re.rf


## Estimate of propensity score using generalized boosted regression modeling
library(gbm)
set.seed(220528)
model.gbm <- gbm(formula=hormon~age2+meno+size2+nodes+er2,
                 data=dat, distribution= "bernoulli", verbose= FALSE)
dat$Ps.gbm <- as.numeric(predict(model.gbm, type= "response"))
sum(dat$Ps.gbm== 0) + sum(dat$Ps.gbm== 1)
# Range of RMST
results.approx.gbm <- RMSTSens(time="rfstime", status="status", exposure="hormon",
                               level.exposed="1", ps="Ps.gbm", data=dat, methods="Approx",
                             use.multicore=TRUE, n.core=2,
                             lambda=c(1,1.5,2), tau=365.25*5, ini.par=1, verbose=FALSE)
# CI of RMST
re.gbm <- RMSTSens.ci(x=results.approx.gbm, B=40, level=0.95, seed=220528,
                  formula=hormon~age2+meno+size2+nodes+er2,
                      model="gbm", trunc.prop=0, use.multicore=TRUE, n.core=2, verbose=TRUE,
                  trContol=ctrl)
re.gbm
}

}
\references{
Bakbergenuly I, Hoaglin DC, Kulinskaya E (2020):
Methods for estimating between-study variance and overall
effect in meta-analysis of odds-ratios.
\emph{Research Synthesis Methods},
DOI: 10.1002/jrsm.1404
}
\seealso{
\code{\link[RMSTSens]{RMSTSens}}, \code{\link[RMSTSens]{print.RMSTSens}}, \code{\link[RMSTSens]{autoplot.RMSTSens}}
}
\author{
Seungjae Lee \email{seungjae2525@gmail.com}
}
\keyword{methods}
